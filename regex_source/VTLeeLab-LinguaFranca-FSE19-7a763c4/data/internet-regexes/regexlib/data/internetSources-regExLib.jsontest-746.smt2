
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all))) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all))) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all))))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all))) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ (re.opt (str.to.re "1")) (re.++ (re.union (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-"))))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ (str.to.re "(") (re.++ (re.range "2" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (str.to.re ")") (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))))))))) (re.union (re.++ (re.range "1" "9") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re ".") (re.union (re.union (str.to.re "\u{20}") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}")))))) (str.to.re "-")))) (re.++ ((_ re.loop 0 4) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.opt (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.union (str.to.re "x") (str.to.re "X")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (str.to.re ".")))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.union (str.to.re "t") (str.to.re "T"))))) (re.++ (re.union (str.to.re "e") (str.to.re "E")) (re.++ (re.union (str.to.re "x") (str.to.re "X")) (re.++ (re.union (str.to.re "t") (str.to.re "T")) (str.to.re ".")))))) (re.++ (re.opt (re.union (str.to.re " ") (re.union (str.to.re "\u{0b}") (re.union (str.to.re "\u{0a}") (re.union (str.to.re "\u{0d}") (re.union (str.to.re "\u{09}") (str.to.re "\u{0c}"))))))) ((_ re.loop 3 4) (re.range "0" "9"))))))))))) ((_ re.loop 0 7) (re.union (re.range "a" "z") (re.range "A" "Z")))))) re.all)))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
