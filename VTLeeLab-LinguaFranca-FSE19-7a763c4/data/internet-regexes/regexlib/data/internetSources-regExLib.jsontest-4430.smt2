
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all))) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all))) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all))))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all))) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.++ ((_ re.loop 0 1) (re.range "0" "3")) (re.++ ((_ re.loop 0 1) (re.range "0" "9")) ((_ re.loop 0 1) ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "j") (re.++ (str.to.re "a") (str.to.re "n"))) (re.++ (str.to.re "J") (re.++ (str.to.re "A") (str.to.re "N")))) (re.++ (str.to.re "f") (re.++ (str.to.re "e") (str.to.re "b")))) (re.++ (str.to.re "F") (re.++ (str.to.re "E") (str.to.re "B")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "r")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "R")))) (re.++ (str.to.re "a") (re.++ (str.to.re "p") (str.to.re "r")))) (re.++ (str.to.re "A") (re.++ (str.to.re "P") (str.to.re "R")))) (re.++ (str.to.re "m") (re.++ (str.to.re "a") (str.to.re "y")))) (re.++ (str.to.re "M") (re.++ (str.to.re "A") (str.to.re "Y")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "n")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "N")))) (re.++ (str.to.re "j") (re.++ (str.to.re "u") (str.to.re "l")))) (re.++ (str.to.re "J") (re.++ (str.to.re "U") (str.to.re "L")))) (re.++ (str.to.re "a") (re.++ (str.to.re "u") (str.to.re "g")))) (re.++ (str.to.re "A") (re.++ (str.to.re "U") (str.to.re "G")))) (re.++ (str.to.re "s") (re.++ (str.to.re "e") (str.to.re "p")))) (re.++ (str.to.re "S") (re.++ (str.to.re "E") (str.to.re "P")))) (re.++ (str.to.re "o") (re.++ (str.to.re "c") (str.to.re "t")))) (re.++ (str.to.re "O") (re.++ (str.to.re "C") (str.to.re "T")))) (re.++ (str.to.re "n") (re.++ (str.to.re "o") (str.to.re "v")))) (re.++ (str.to.re "N") (re.++ (str.to.re "O") (str.to.re "V")))) (re.++ (str.to.re "d") (re.++ (str.to.re "e") (str.to.re "c")))) (re.++ (str.to.re "D") (re.++ (str.to.re "E") (str.to.re "C")))))))) re.all)))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
