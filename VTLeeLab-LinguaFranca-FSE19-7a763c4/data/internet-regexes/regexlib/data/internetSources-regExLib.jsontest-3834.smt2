
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor)))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor)) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor)) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor)))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor)) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor)) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor)))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor)) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to.re "B") ((_ re.capture 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "J")) (str.to.re "L")) (str.to.re "N")) (str.to.re "R")) (str.to.re "S")) (str.to.re "Y")))) (re.++ (str.to.re "C") (str.to.re "A"))) (re.++ (str.to.re "D") ((_ re.capture 3) (re.union (re.union (str.to.re "K") (str.to.re "S")) (str.to.re "T"))))) (re.++ (str.to.re "G") ((_ re.capture 4) (re.union (str.to.re "A") (str.to.re "L"))))) (re.++ (str.to.re "H") ((_ re.capture 5) (re.union (str.to.re "C") (str.to.re "E"))))) (re.++ (str.to.re "I") (str.to.re "L"))) (re.++ (str.to.re "K") ((_ re.capture 6) (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "E")) (str.to.re "K")) (str.to.re "M")) (str.to.re "N")) (str.to.re "S"))))) (re.++ (str.to.re "L") ((_ re.capture 7) (re.union (re.union (re.union (str.to.re "E") (str.to.re "C")) (str.to.re "M")) (str.to.re "V"))))) (re.++ (str.to.re "M") ((_ re.capture 8) (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "I")) (str.to.re "L")) (str.to.re "T")) (str.to.re "Y"))))) (re.++ (str.to.re "N") ((_ re.capture 9) (re.union (re.union (re.union (re.union (str.to.re "I") (str.to.re "O")) (str.to.re "M")) (str.to.re "R")) (str.to.re "Z"))))) (re.++ (str.to.re "P") ((_ re.capture 10) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "B") (str.to.re "D")) (str.to.re "E")) (str.to.re "O")) (str.to.re "K")) (str.to.re "N")) (str.to.re "P")) (str.to.re "T")) (str.to.re "U")) (str.to.re "V"))))) (re.++ (str.to.re "R") ((_ re.capture 11) (re.union (re.union (re.union (str.to.re "A") (str.to.re "K")) (str.to.re "S")) (str.to.re "V"))))) (re.++ (str.to.re "S") ((_ re.capture 12) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "B")) (str.to.re "C")) (str.to.re "E")) (str.to.re "I")) (str.to.re "K")) (str.to.re "L")) (str.to.re "O")) (str.to.re "N")) (str.to.re "P")) (str.to.re "V"))))) (re.++ (str.to.re "T") ((_ re.capture 13) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "N")) (str.to.re "O")) (str.to.re "R")) (str.to.re "S")) (str.to.re "T")) (str.to.re "V"))))) (re.++ (str.to.re "V") ((_ re.capture 14) (re.union (str.to.re "K") (str.to.re "T"))))) (re.++ (str.to.re "Z") ((_ re.capture 15) (re.union (re.union (re.union (re.union (re.union (str.to.re "A") (str.to.re "C")) (str.to.re "H")) (str.to.re "I")) (str.to.re "M")) (str.to.re "V")))))) (re.++ ((_ re.capture 16) ((_ re.loop 0 1) (str.to.re " "))) (re.++ ((_ re.capture 17) ((_ re.loop 0 3) (re.range "0" "9"))) ((_ re.capture 18) ((_ re.loop 0 2) (re.range "A" "Z"))))))) re.end-anchor))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
