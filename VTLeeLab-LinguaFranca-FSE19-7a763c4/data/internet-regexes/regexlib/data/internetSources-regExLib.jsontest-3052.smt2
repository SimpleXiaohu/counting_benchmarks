
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all))) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all))) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all))))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all))) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ ((_ re.capture 1) (re.++ (re.union (re.range "A" "P") (re.union (re.range "R" "U") (re.union (str.to.re "W") (re.union (str.to.re "Y") (re.union (str.to.re "Z") (re.union (re.range "a" "p") (re.union (re.range "r" "u") (re.union (str.to.re "w") (re.union (str.to.re "y") (str.to.re "z")))))))))) ((_ re.capture 2) (re.union (re.union ((_ re.loop 1 2) (re.range "0" "9")) ((_ re.capture 3) (re.union (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.range "0" "9")) (re.++ (re.union (re.range "A" "H") (re.union (re.range "K" "Y") (re.union (re.range "a" "h") (re.range "k" "y")))) (re.++ (re.range "0" "9") ((_ re.capture 4) (re.union (re.range "0" "9") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "E") (re.union (str.to.re "H") (re.union (str.to.re "M") (re.union (str.to.re "N") (re.union (str.to.re "P") (re.union (str.to.re "R") (re.union (re.range "V" "Y") (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "e") (re.union (str.to.re "h") (re.union (str.to.re "m") (re.union (str.to.re "n") (re.union (str.to.re "p") (re.union (str.to.re "r") (re.range "v" "y"))))))))))))))))))))))))) (re.++ (re.range "0" "9") (re.union (re.range "A" "H") (re.union (str.to.re "J") (re.union (str.to.re "K") (re.union (re.range "S" "U") (re.union (str.to.re "W") (re.union (re.range "a" "h") (re.union (str.to.re "j") (re.union (str.to.re "k") (re.union (re.range "s" "u") (str.to.re "w"))))))))))))))) re.all)))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
