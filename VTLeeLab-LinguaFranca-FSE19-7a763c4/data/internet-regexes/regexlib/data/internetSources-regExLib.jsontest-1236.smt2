
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor)))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor)) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor)) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor)))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor)) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor)) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor)))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor)) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.++ re.begin-anchor (re.++ ((_ re.capture 1) (re.union (re.union (re.union ((_ re.capture 2) (re.++ ((_ re.capture 3) (re.union (re.union (str.to.re "s") (str.to.re "S")) (re.union (str.to.re "n") (str.to.re "N")))) (re.union (re.range "a" "h") (re.union (re.range "A" "H") (re.union (re.range "j" "z") (re.range "J" "Z")))))) ((_ re.capture 4) (re.++ ((_ re.capture 5) (re.union (re.union (str.to.re "t") (str.to.re "T")) (re.union (str.to.re "o") (str.to.re "O")))) (re.union (str.to.re "a") (re.union (str.to.re "b") (re.union (str.to.re "f") (re.union (str.to.re "g") (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "A") (re.union (str.to.re "B") (re.union (str.to.re "F") (re.union (str.to.re "G") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W"))))))))))))))))))))))) ((_ re.capture 6) (re.++ (re.union (str.to.re "h") (str.to.re "H")) (re.union (re.range "l" "z") (re.range "L" "Z"))))) ((_ re.capture 7) (re.++ (re.union (str.to.re "j") (str.to.re "J")) (re.union (str.to.re "l") (re.union (str.to.re "m") (re.union (str.to.re "q") (re.union (str.to.re "r") (re.union (str.to.re "v") (re.union (str.to.re "w") (re.union (str.to.re "L") (re.union (str.to.re "M") (re.union (str.to.re "Q") (re.union (str.to.re "R") (re.union (str.to.re "V") (str.to.re "W")))))))))))))))) (re.++ (re.opt ((_ re.capture 8) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 9) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 10) ((_ re.loop 0 2) (re.range "0" "9")))) (re.++ (re.opt ((_ re.capture 11) ((_ re.loop 0 2) (re.range "0" "9")))) (re.opt ((_ re.capture 12) ((_ re.loop 0 2) (re.range "0" "9")))))))))) re.end-anchor))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
