
(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all))) (str.to.re "\x00"))))
;match[1]!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) ))
;/[a-z]+/.test(match[1]) == true
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all))))	; match!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all))) (str.to.re "\x00"))))	
;match[1]!==null
(assert (not (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all))) (re.++ re.all(re.+ (re.range "a" "z")) re.all) )))
;/[a-z]+/.test(match[1]) == false	
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all))))	; match!==null
(assert (str.in.re ((_ str.extract 1) var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all))) (str.to.re "\x00")))
;match[1]==null
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))
(assert (not (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.capture 1) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 2) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.opt ((_ re.capture 3) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 4) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) (re.++ ((_ re.capture 5) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_"))))) ((_ re.capture 6) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 7) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 8) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.+ (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 9) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 10) ((_ re.loop 0 4) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 11) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 12) ((_ re.loop 1 2) (re.range "0" "9")))))))) (re.++ ((_ re.capture 13) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) (re.++ ((_ re.capture 14) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 15) ((_ re.loop 2 4) (re.range "0" "9")))))))) (re.++ ((_ re.capture 16) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 17) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z"))))))) (re.++ ((_ re.capture 18) (re.+ (re.union (re.range "a" "z") (re.range "A" "Z")))) (re.++ (re.* (re.inter (re.diff (re.range "\x01" "\xff") (re.range "a" "z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "A" "Z")) (re.inter (re.diff (re.range "\x01" "\xff") (re.range "0" "9")) (re.diff (re.range "\x01" "\xff") (str.to.re "_")))))) ((_ re.capture 19) ((_ re.loop 1 2) (re.range "0" "9")))))) (re.++ ((_ re.capture 20) ((_ re.loop 0 2) (re.range "0" "9"))) (re.++ ((_ re.capture 21) ((_ re.loop 0 2) (re.range "0" "9"))) (re.opt ((_ re.capture 22) ((_ re.loop 2 4) (re.range "0" "9"))))))) re.all)))))	; match == null
(check-sat)
(get-model)
(pop 1)
(exit)
