;;(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)|(.*)a\32

(set-option :produce-models true)
(set-option :inline-size-limit 10000)

(declare-const var0 String)

(assert (str.in.re var0 (re.* (re.range "\x01" "\xff"))))

(assert (str.in.re var0 (re.++ (re.*? re.allchar) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union ((_ re.capture 1) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n")))) ((_ re.capture 2) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 3) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 4) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 5) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 6) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 7) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 8) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 9) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 10) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 11) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 12) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 13) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 14) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 15) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 16) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 17) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 18) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 19) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 20) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 21) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 22) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 23) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 24) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 25) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 26) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 27) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 28) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 29) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 30) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) ((_ re.capture 31) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n"))))) (re.++ ((_ re.capture 32) (re.* (re.diff (re.range "\x01" "\xff") (str.to.re "\n")))) (re.++ (str.to.re "a") (_ re.reference 32)))) re.all))))

(assert (> (str.len var0) 10))

(check-sat)
(get-model)
